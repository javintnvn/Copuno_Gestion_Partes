{
  "permissions": {
    "allow": [
      "Bash(npm run build)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement Smart Polling adaptive sync system (v1.4.0)\n\nðŸŽ¯ Major Features:\n- Smart Polling with 3 adaptive levels (fast: 3s, normal: 8s, slow: 15s)\n- Visual sync mode indicators in header with animated badges\n- Hash-based change detection to prevent unnecessary updates\n- Optimized cache TTL from 60s to 5s\n\nðŸ“Š Performance Improvements:\n- Latency reduced by 83% during activity (30s â†’ 3s)\n- API consumption optimized by 60% during peaks (4.0 req/s â†’ 1.6 req/s)\n- Support for 10+ concurrent users without exceeding rate limits\n\nðŸ”§ Technical Changes:\nFrontend (src/App.jsx):\n- Implement smart polling for parts list (lines 19-76)\n- Implement smart polling for status options (lines 78-123)\n- Add sync mode state and visual indicators (lines 18, 255-260)\n\nBackend (server.js):\n- Optimize cache TTL to 5000ms (line 98)\n- Implement adaptive SSE polling (lines 891-950)\n\nStyles (src/App.css):\n- Add sync mode indicator styles (lines 142-218)\n- Add pulse animation for fast mode (lines 209-218)\n\nðŸ“š Documentation:\n- NEW: docs/SMART_POLLING.md - Complete technical guide\n- NEW: docs/ESTADO_ACTUAL_V1.4.0.md - Project status v1.4.0\n- NEW: CHANGELOG_V1.4.0.md - Detailed changelog\n- UPDATED: README.md - Features and changelog\n- UPDATED: docs/GUIA_DESPLIEGUE.md - Cache TTL and verification\n- UPDATED: docs/CONFIGURACION_ENTORNO.md - CACHE_TTL_MS variable\n\nâœ… Testing:\n- Build successful (npm run build)\n- No breaking changes\n- 100% backwards compatible\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(gh api:*)",
      "Bash(curl:*)",
      "Bash(python3 -c \"import sys, json; branches = json.load(sys.stdin); print(''''\\n''''.join([f''''{b[\"\"name\"\"]} (commit: {b[\"\"commit\"\"][\"\"sha\"\"][:7]})'''' for b in branches]))\")",
      "Bash(python3:*)",
      "Bash(pkill:*)",
      "Bash(node:*)"
    ],
    "deny": [],
    "ask": []
  }
}
